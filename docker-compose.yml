# Library Management System - Docker Compose Configuration
# Complete development and production setup with PostgreSQL

version: '3.8'

services:
  # PostgreSQL Database
  database:
    image: postgres:15-alpine
    container_name: library-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: library_db
      POSTGRES_USER: library_user
      POSTGRES_PASSWORD: library_password
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql:ro
    ports:
      - "5432:5432"
    networks:
      - library-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U library_user -d library_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Library Management API
  app:
    build: .
    container_name: library-api
    restart: unless-stopped
    depends_on:
      database:
        condition: service_healthy
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - SERVER_PORT=8080
      - DB_HOST=database
      - DB_PORT=5432
      - DB_NAME=library_db
      - DB_USERNAME=library_user
      - DB_PASSWORD=library_password
      - JAVA_OPTS=-Xms256m -Xmx512m -XX:+UseContainerSupport -XX:MaxRAMPercentage=75.0
    ports:
      - "8080:8080"
    networks:
      - library-network
    volumes:
      - app_logs:/app/logs
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # pgAdmin (Optional - for database management)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: library-pgadmin
    restart: unless-stopped
    profiles:
      - admin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@library.local
      PGADMIN_DEFAULT_PASSWORD: admin_password
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - "5050:80"
    networks:
      - library-network
    depends_on:
      - database
    volumes:
      - pgadmin_data:/var/lib/pgadmin

volumes:
  postgres_data:
    driver: local
  app_logs:
    driver: local
  pgadmin_data:
    driver: local

networks:
  library-network:
    driver: bridge